% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{Giraph}
M.~Han and K.~Daudjee, ``Giraph unchained: Barrierless asynchronous parallel
  execution in pregel-like graph processing systems,'' \emph{Proceedings of the
  VLDB Endowment}, vol.~8, no.~9, pp. 950--961, 2015.

\bibitem{Pregel}
G.~Malewicz, M.~H. Austern, A.~J.~C. Bik, J.~C. Dehnert, I.~Horn, N.~Leiser,
  and G.~Czajkowski, ``Pregel: a system for large-scale graph processing,'' in
  \emph{Proceedings of the {ACM} {SIGMOD} International Conference on
  Management of Data}, 2010, pp. 135--146.

\bibitem{GraphJet}
A.~Sharma, J.~Jiang, P.~Bommannavar, B.~Larson, and J.~J. Lin, ``Graphjet:
  Real-time content recommendations at twitter,'' \emph{Proceedings of the
  {VLDB} Endowment}, vol.~9, no.~13, pp. 1281--1292, 2016.

\bibitem{Knightking}
K.~Yang, M.~Zhang, K.~Chen, X.~Ma, Y.~Bai, and Y.~Jiang, ``Knightking: a fast
  distributed graph random walk engine,'' in \emph{Proceedings of the 27th
  {ACM} Symposium on Operating Systems Principles}, 2019, pp. 524--537.

\bibitem{Gemini}
X.~Zhu, W.~Chen, W.~Zheng, and X.~Ma, ``Gemini: {A} computation-centric
  distributed graph processing system,'' in \emph{Proceedings of the 12th
  {USENIX} Symposium on Operating Systems Design and Implementation}, 2016, pp.
  301--316.

\bibitem{facebook}
``facebook,'' \url{http://www.facebook.com/}, 2020.

\bibitem{Google}
``Google,'' \url{http://www.google.com/}, 2020.

\bibitem{twitter_web}
``twitter,'' \url{https://www.twitter.com/}, 2020.

\bibitem{tencent}
``tencent,'' \url{https://www.tencent.com/en-us/about.html/}, 2020.

\bibitem{PageRank}
L.~Page, S.~Brin, R.~Motwani, and T.~Winograd, ``The pagerank citation ranking:
  Bringing order to the web,'' Stanford Digital Library Technologies Project,
  Tech. Rep., 1998.

\bibitem{SCC}
S.~Hong, N.~C. Rodia, and K.~Olukotun, ``On fast parallel detection of strongly
  connected components (scc) in small-world graphs,'' in \emph{Proceedings of
  the 2013 International Conference for High Performance Computing, Networking,
  Storage and Analysis}, 2013, pp. 1--11.

\bibitem{k-means}
S.~Gupta, R.~Kumar, K.~Lu, B.~Moseley, and S.~Vassilvitskii, ``Local search
  methods for k-means with outliers,'' \emph{Proceedings of the VLDB
  Endowment}, vol.~10, no.~7, pp. 757--768, 2017.

\bibitem{X-stream}
A.~Roy, I.~Mihailovic, and W.~Zwaenepoel, ``X-stream: Edge-centric graph
  processing using streaming partitions,'' in \emph{Proceedings of the 24th ACM
  Symposium on Operating Systems Principles}, 2013, pp. 472--488.

\bibitem{GraphChi}
A.~Kyrola, G.~Blelloch, and C.~Guestrin, ``Graphchi: Large-scale graph
  computation on just a pc,'' in \emph{Proceedings of the 10th USENIX Symposium
  on Operating Systems Design and Implementation}, 2012, pp. 31--46.

\bibitem{GridGraph}
X.~Zhu, W.~Han, and W.~Chen, ``Gridgraph: Large scale graph processing on a
  single machine using 2-level hierarchical partitioning,'' in
  \emph{Proceedings of the 2015 USENIX Annual Technical Conference}, 2015, pp.
  375--386.

\bibitem{Vora}
K.~Vora, G.~Xu, and R.~Gupta, ``Load the edges you need: A generic i/o
  optimization for disk-based graph processing,'' in \emph{Proceedings of the
  2016 USENIX Annual Technical Conference}, 2016, pp. 507--522.

\bibitem{LUMOS}
K.~Vora, ``{LUMOS:} dependency-driven disk-based graph processing,'' in
  \emph{Proceedings of the 2019 {USENIX} Annual Technical Conference}, 2019,
  pp. 429--442.

\bibitem{seraph}
J.~Xue, Z.~Yang, Z.~Qu, S.~Hou, and Y.~Dai, ``Seraph: an efficient, low-cost
  system for concurrent graph processing,'' in \emph{Proceedings of the 23rd
  International Symposium on High-performance Parallel and Distributed
  Computing}, 2014, pp. 227--238.

\bibitem{CGraph}
Y.~Zhang, X.~Liao, H.~Jin, L.~Gu, L.~He, B.~He, and H.~Liu, ``C{G}raph: A
  correlations-aware approach for efficient concurrent iterative graph
  processing,'' in \emph{Proceedings of the 2018 {USENIX} Annual Technical
  Conference}, 2018, pp. 441--452.

\bibitem{GraphM}
J.~Zhao, Y.~Zhang, X.~Liao, L.~He, B.~He, H.~Jin, H.~Liu, and Y.~Chen,
  ``Graph{M}: an efficient storage system for high throughput of concurrent
  graph processing,'' in \emph{Proceedings of the 2019 International Conference
  for High Performance Computing, Networking, Storage and Analysis}, 2019, pp.
  3:1--3:14.

\bibitem{seraph1}
J.~Xue, Z.~Yang, S.~Hou, and Y.~Dai, ``Processing concurrent graph analytics
  with decoupled computation model,'' \emph{{IEEE} Transactions on Computers},
  vol.~66, no.~5, pp. 876--890, 2017.

\bibitem{CGraph2019}
Y.~Zhang, J.~Zhao, X.~Liao, H.~Jin, L.~Gu, H.~Liu, B.~He, and L.~He,
  ``C{G}raph: A distributed storage and processing system for concurrent
  iterative graph analysis jobs,'' \emph{ACM Transactions on Storage}, vol.~15,
  no.~2, pp. 10:1--10:26, 2019.

\bibitem{PowerGraph}
J.~E. Gonzalez, Y.~Low, H.~Gu, D.~Bickson, and C.~Guestrin, ``Powergraph:
  Distributed graph-parallel computation on natural graphs,'' in
  \emph{Proceedings of the 10th {USENIX} Symposium on Operating Systems Design
  and Implementation}, 2012, pp. 17--30.

\bibitem{Graphene}
H.~Liu and H.~H. Huang, ``Graphene: Fine-grained {IO} management for graph
  computing,'' in \emph{Proceedings of the 15th {USENIX} Conference on File and
  Storage Technologies}, 2017, pp. 285--300.

\bibitem{Wonderland}
M.~Zhang, Y.~Wu, Y.~Zhuo, X.~Qian, C.~Huan, and K.~Chen, ``Wonderland: A novel
  abstraction-based out-of-core graph processing system,'' in \emph{Proceedings
  of the 23th International Conference on Architectural Support for Programming
  Languages and Operating Systems}, 2018, pp. 608--621.

\bibitem{SSSP}
U.~Meyer, ``Single-source shortest-paths on arbitrary directed graphs in linear
  average-case time,'' in \emph{Proceedings of the 12th Annual ACM-SIAM
  Symposium on Discrete Algorithms}, 2001, pp. 797--806.

\bibitem{ReGraph}
X.~Li, M.~Zhang, K.~Chen, and Y.~Wu, ``Regraph: {A} graph processing framework
  that alternately shrinks and repartitions the graph,'' in \emph{Proceedings
  of the 32nd International Conference on Supercomputing}, 2018, pp. 172--183.

\bibitem{G-store}
P.~Kumar and H.~H. Huang, ``G-store: high-performance graph store for
  trillion-edge processing,'' in \emph{Proceedings of the 2016 International
  Conference for High Performance Computing, Networking, Storage and Analysis},
  2016, pp. 830--841.

\bibitem{Maiter}
Y.~Zhang, Q.~Gao, L.~Gao, and C.~Wang, ``Maiter: An asynchronous graph
  processing framework for delta-based accumulative iterative computation,''
  \emph{{IEEE} Transactions on Parallel Distributed Systems}, vol.~25, no.~8,
  pp. 2091--2100, 2014.

\bibitem{HotGraph}
Y.~Zhang, X.~Liao, H.~Jin, L.~Gu, G.~Tan, and B.~B. Zhou, ``Hotgraph: Efficient
  asynchronous processing for real-world graphs,'' \emph{IEEE Transactions on
  Computers}, vol.~66, no.~5, pp. 799--809, 2017.

\bibitem{FlashGraph}
D.~Zheng, D.~Mhembere, R.~C. Burns, J.~T. Vogelstein, C.~E. Priebe, and A.~S.
  Szalay, ``Flashgraph: Processing billion-node graphs on an array of commodity
  ssds,'' in \emph{Proceedings of the 13th {USENIX} Conference on File and
  Storage Technologies}, 2015, pp. 45--58.

\bibitem{TurboGraph}
W.~Han, S.~Lee, K.~Park, J.~Lee, M.~Kim, J.~Kim, and H.~Yu, ``Turbograph: a
  fast parallel graph engine handling billion-scale graphs in a single {PC},''
  in \emph{Proceedings of the 19th {ACM} {SIGKDD} International Conference on
  Knowledge Discovery and Data Mining}, 2013, pp. 77--85.

\bibitem{LAW}
``Law.'' \url{http://law.di.unimi.it/datasets.php}, 2021.

\bibitem{SNAP}
``Snap.'' \url{http://snap.stanford.edu/data/index.html}, 2021.

\bibitem{BFS}
A.~Bulu\c{c} and K.~Madduri, ``Parallel breadth-first search on distributed
  memory systems,'' in \emph{Proceedings of 2011 International Conference for
  High Performance Computing, Networking, Storage and Analysis}, 2011, pp.
  1--12.

\bibitem{NXgraph}
Y.~Chi, G.~Dai, Y.~Wang, G.~Sun, G.~Li, and H.~Yang, ``Nxgraph: An efficient
  graph processing system on a single machine,'' in \emph{Proceedings of the
  2016 IEEE International Conference on Data Engineering}, 2016, pp. 409--420.

\bibitem{HUS-Graph}
X.~Xu, F.~Wang, H.~Jiang, Y.~Cheng, D.~Feng, and Y.~Zhang, ``Hus-graph:
  I/o-efficient out-of-core graph processing with hybrid update strategy,'' in
  \emph{Proceedings of the 47th International Conference on Parallel
  Processing}, 2018, pp. 3:1--3:10.

\bibitem{CLIP}
Z.~Ai, M.~Zhang, Y.~Wu, X.~Qian, K.~Chen, and W.~Zheng, ``Squeezing out all the
  value of loaded data: An out-of-core graph processing system with reduced
  disk i/o,'' in \emph{Proceedings of the 2017 USENIX Annual Technical
  Conference}, 2017, pp. 125--137.

\bibitem{Wukong}
J.~Shi, Y.~Yao, R.~Chen, H.~Chen, and F.~Li, ``Fast and concurrent {RDF}
  queries with rdma-based distributed graph exploration,'' in \emph{Proceedings
  of the 12th USENIX Symposium on Operating Systems Design and Implementation},
  2016, pp. 317--332.

\bibitem{Congra}
P.~Pan and C.~Li, ``Congra: Towards efficient processing of concurrent graph
  queries on shared-memory machines,'' in \emph{Proceedings of the 2017
  International Conference on Computer Design}, 2017, pp. 217--224.

\bibitem{CongraPlus}
P.~Pan, C.~Li, and M.~Guo, ``Congraplus: Towards efficient processing of
  concurrent graph queries on {NUMA} machines,'' \emph{{IEEE} Transactions on
  Parallel and Distributed Systems}, vol.~30, no.~9, pp. 1990--2002, 2019.

\bibitem{GraphOne}
P.~Kumar and H.~H. Huang, ``Graphone: {A} data store for real-time analytics on
  evolving graphs,'' in \emph{Proceedings of the 17th {USENIX} Conference on
  File and Storage Technologies}, 2019, pp. 249--263.

\bibitem{Alexander}
A.~van Renen, V.~Leis, A.~Kemper, T.~Neumann, T.~Hashida, K.~Oe, Y.~Doi,
  L.~Harada, and M.~Sato, ``Managing non-volatile memory in database systems,''
  in \emph{Proceedings of the 2018 International Conference on Management of
  Data}, 2018, pp. 1541--1555.

\bibitem{VENUS}
J.~Cheng, Q.~Liu, Z.~Li, W.~Fan, J.~C.~S. Lui, and C.~He, ``{VENUS:}
  vertex-centric streamlined graph computation on a single {PC},'' in
  \emph{Proceedings of the 31st {IEEE} International Conference on Data
  Engineering}, 2015, pp. 1131--1142.

\bibitem{dynamic-graph}
L.~Vaquero, F.~Cuadrado, D.~Logothetis, and C.~Martella, ``Adaptive
  partitioning for large-scale dynamic graphs,'' in \emph{Proceedings of the
  4th Annual Symposium on Cloud Computing}, 2013, p.~35.

\end{thebibliography}
